<template>
  <NDataTable :columns="columns" :data="data" :pagination="pagination" />
  <pre>{{ JSON.stringify(data, null, 2) }}</pre>
</template>

<script lang="ts">
import { h, defineComponent, ref } from "vue";
import { NDataTable, NInput } from "naive-ui";
import type { DataTableColumns } from "naive-ui";

interface RowData {
  key: number;
  name: string;
  age: string;
  address: string;
}

const createData = (): RowData[] => [
  {
    key: 0,
    name: "John Brown",
    age: "32",
    address: "New York No. 1 Lake Park",
  },
  {
    key: 1,
    name: "Jim Green",
    age: "42",
    address: "London No. 1 Lake Park",
  },
  {
    key: 2,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 3,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 4,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 5,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 6,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 7,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 8,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 9,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 10,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 11,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 12,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
  {
    key: 13,
    name: "Joe Black",
    age: "32",
    address: "Sidney No. 1 Lake Park",
  },
];

export default defineComponent({
  setup() {
    const data = ref(createData());
    const createColumns = (): DataTableColumns<RowData> => [
      {
        title: "Name",
        key: "name",
        render(row, index) {
          return h(NInput, {
            value: row.name,
            onUpdateValue(v) {
              data.value[index].name = v;
            },
          });
        },
      },
      {
        title: "Age",
        key: "age",
        render(row, index) {
          return h(NInput, {
            value: row.age,
            onUpdateValue(v) {
              data.value[index].age = v;
            },
          });
        },
      },
      {
        title: "Address",
        key: "address",
        render(row, index) {
          return h(NInput, {
            value: row.address,
            onUpdateValue(v) {
              data.value[index].address = v;
            },
          });
        },
      },
    ];
    return {
      data,
      columns: createColumns(),
      pagination: {
        pageSize: 5,
      },
    };
  },
  components: { NDataTable },
});
</script>
